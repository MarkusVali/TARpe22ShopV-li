// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ValiShop.Data;

#nullable disable

namespace ValiShop.Data.Migrations
{
    [DbContext(typeof(ValiShopContext))]
    partial class ValiShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.25");

            modelBuilder.Entity("ValiShop.Core.Domain.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CarShape")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CarType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasAirConditioning")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCarSold")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LicensePlateTemplate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ManufactureDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mark")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginCountry")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SeatAmount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("ValiShop.Core.Domain.CarFileToDatabase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CarId")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("ImageTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CarFilesToDatabase");
                });

            modelBuilder.Entity("ValiShop.Core.Domain.FileToApi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ExistingFilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RealEstateId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RealEstateId");

                    b.ToTable("FilesToApi");
                });

            modelBuilder.Entity("ValiShop.Core.Domain.FileToDatabase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("ImageTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("SpaceshipId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FilesToDatabase");
                });

            modelBuilder.Entity("ValiShop.Core.Domain.RealEstate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("BathroomCount")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BedroomCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("BuiltAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ContactFax")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContactPhone")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("DoesHaveSwimmingPool")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Floor")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FloorCount")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPropertySold")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ListingDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("PostalCode")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RoomCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SquareMeters")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("WhenEstateListedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RealEstates");
                });

            modelBuilder.Entity("ValiShop.Core.Domain.Spaceship", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BuiltDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("CargoWeight")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("CrewCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("DoesHaveAutopilot")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DoesHaveLifeSupportSystems")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EnginePower")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FuelCapacity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FuelConsumption")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FuelType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FullTripsCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastMaintenance")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("MaidenLaunch")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaintenanceCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PassengerCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Spaceships");
                });

            modelBuilder.Entity("ValiShop.Core.Domain.FileToApi", b =>
                {
                    b.HasOne("ValiShop.Core.Domain.RealEstate", null)
                        .WithMany("FilesToApi")
                        .HasForeignKey("RealEstateId");
                });

            modelBuilder.Entity("ValiShop.Core.Domain.RealEstate", b =>
                {
                    b.Navigation("FilesToApi");
                });
#pragma warning restore 612, 618
        }
    }
}
